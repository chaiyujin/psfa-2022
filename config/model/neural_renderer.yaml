_target_: src.projects.neural_renderer.pl_wrapper.PL_Wrapper

tag: ${._tag_arch}${._tag_texs}${._tag_drop}${._tag_norm}-${._tag_trn}-loss_${._tag_loss}
_tag_arch: ${lower:${.neural_renderer.renderer_type}}-${lower:${.neural_renderer.inpainter_type}}_${cond:${.neural_renderer.inpaint_concat},'6','3'}
_tag_texs: -tex${.neural_renderer.tex_dim}_${.neural_renderer.tex_features}
_tag_drop: ${cond:${.neural_renderer.use_dropout},-drop${.neural_renderer.dropout},''}
_tag_norm: ${cond:${.neural_renderer.use_norm},-${lower:${.neural_renderer.norm}},''}

_tag_trn: bs${datamodule.batch_size}-lr${.optim.lr}${._tag_augc}${._tag_augf}
_tag_augc: ${cond:${.aug_crop},'-aug_crop',''}
_tag_augf: ${cond:${.aug_flip},'-aug_flip',''}
_tag_loss: ${._tag_item_fake}_${._tag_item_face}_${._tag_item_tex3}${._tag_item_gan}  # _innm${.loss.scale_inner_mouth}_${._tag_item_zoom}
_tag_item_fake: fake_${.loss.scale_fake}_${.loss.scale_fake_vgg}
_tag_item_face: face_${.loss.scale_face}_${.loss.scale_face_vgg}
_tag_item_tex3: tex3_${.loss.scale_tex3}_${.loss.scale_tex3_vgg}
_tag_item_zoom: zoom_${.loss.scale_zoomed_mouth}_${.loss.scale_zoomed_mouth_vgg}
_tag_item_gan: ${case:${.gan_mode},'none','','lsgan','_lsgan${.loss.scale_adv}'}

# * ---------------------------------------------------------------------------------------------------------------- * #
# *                                                    Visualizer                                                    * #
# * ---------------------------------------------------------------------------------------------------------------- * #

debug: ${debug}
video: ${data.video}
audio: ${data.audio}

visualizer:
  painter: ['draw_nr_inter', 'draw_nr']
  draw_gap_steps: 200
  draw_grid_size: 256
  video_gap_epochs: 10
  video_grid_size: 256
  video_1st_epoch: true
  # flags
  generate_train: true
  generate_valid: true
  generate_test: false
  overwrite_videos: false
  dump_metrics: true
  dump_audio: false
  dump_offsets: false
  dump_coeffs: false

# * ---------------------------------------------------------------------------------------------------------------- * #
# *                                                  Neural Renderer                                                 * #
# * ---------------------------------------------------------------------------------------------------------------- * #

# * When using instance norm: (for watson)
# 1. 'UNET_5_level' better than 'UNET_5_level_BU'
# 2. 'use_dropout=false' is better
#
aug_crop: false
aug_flip: false

gan_mode: 'none'

neural_renderer:
  clip_sources  : "???"
  speakers      : "???"
  image_size    : ${data.video.image_size}
  camera_type   : ortho
  camera_aspect : 1.0
  template_fpath: "${path.root_dir}/src/mm_fitting/libmorph/data/template/TMPL.obj"
  # renderer settings
  renderer_type : "UNET5NU"
  inpainter_type: ${.renderer_type}
  ngf           : 64  # # of gen filters in first conv layer
  use_norm      : true
  norm          : "IN"
  use_dropout   : false
  dropout       : 0.0
  init_type     : "xavier"
  init_gain     : 0.02
  # original neural renderer texture
  tex_dim       : 256
  tex_features  : 32

  tex_face_cond_rotat: null

  dilating_jaw_factor: 0.3
  dilating_kernel_size: 7
  inpaint_concat: false
  inpaint_dilated_only: false

  mesh_conv:
    in_channels: 3
    hidden_channels: [16, 32, 32]
    latent_channels: 64
    activation: "leaky_relu?negative_slope=0.2"
    latent_activation: "identity"
    output_activation: "identity"
    norm_method: "none"
    dropout: 0.0
    # which kind of encoder/decoder
    conv_type: 'SpiralConv'
    ds_factors: [4, 4, 4]  # sampling
    spiral_seq_lengths: 12  # (optional) SpiralConv specific
    spiral_dilations: 1
    K: 6  # (optional) ChebConv specific

# * ---------------------------------------------------------------------------------------------------------------- * #
# *                                                       Loss                                                       * #
# * ---------------------------------------------------------------------------------------------------------------- * #

optim:
  name: Adam
  lr: 2e-3
  weight_decay: 0
  lr_scheduler: { name: LambdaLR, interval: epoch, gamma: 0.95, start_iter: 10, min_times: 0.05 }
optim_d:
  name: Adam
  lr: 2e-4
  weight_decay: 0
  lr_scheduler: { name: LambdaLR, interval: epoch, gamma: 0.98, start_iter: 10, min_times: 0.5 }

loss:
  scale_fake: 1.0
  scale_fake_vgg: 1.0
  scale_face: 0.8
  scale_face_vgg: 1.0
  scale_tex3: 0.8
  scale_tex3_vgg: 0.0

  scale_inner_mouth: 10.0

  scale_zoomed_mouth: 0.0
  scale_zoomed_mouth_vgg: 0.0

  scale_adv: 0.0
